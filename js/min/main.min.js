$(document).ready(function () { var e = $("#header-slider"); if (e.owlCarousel({ singleItem: !0, navigation: !0, navigationText: ["<i class='ion-ios-arrow-thin-left'></i>", "<i class='ion-ios-arrow-thin-right'></i>"], transitionStyle: "fade", pagination: !0 }), $("#Client_Logo").owlCarousel({ autoPlay: 5e3, items: 6, responsiveClass: !0, responsive: { 0: { items: 1 }, 480: { items: 1 }, 768: { items: 3 }, 1200: { items: 3 } } }), $(function () { $("#mixed-items").mixItUp() }), (new WOW).init(), $(window).load(function () { $("div#loading").remove(), $("body").removeClass("loading") }), $("#top-nav").onePageNav({ currentClass: "active", changeHash: !0, scrollSpeed: 1200 }), $(".counter").counterUp({ delay: 10, time: 2e3 }), function () { var e = 0; $("#scroll").click(function () { if (location.pathname.replace(/^\//, "") === this.pathname.replace(/^\//, "") && location.hostname === this.hostname) { var o = $(this.hash); if (o = o.length ? o : $("[name=" + this.hash.slice(1) + "]"), o.length) return $("html,body").animate({ scrollTop: o.offset().top - e }, 1e3), !1 } }), $.scrollUp({ scrollDistance: 2e3, scrollSpeed: 1200 }) }(), $(".carousel").carousel(), $("#googleMap").length) { var o = { center: new google.maps.LatLng(51.508742, -.12085), zoom: 9, scrollwheel: !1, navigationControl: !1, mapTypeControl: !1, scaleControl: !1, draggable: !1, mapTypeId: google.maps.MapTypeId.ROADMAP }; new google.maps.Map(document.getElementById("googleMap"), o) } if ($("#googleMap").length) { var o = { center: new google.maps.LatLng(41.878114, -87.629798), zoom: 9, scrollwheel: !1, mapTypeId: google.maps.MapTypeId.ROADMAP }; new google.maps.Map(document.getElementById("googleMap"), o) } });

var ul;
var liItems; 
var imageWidth;
var imageNumber;

function init(){

    ul = document.getElementById('image_slider');
    liItems = ul.children;
    imageNumber = liItems.length;
    imageWidth = liItems[0].children[0].offsetWidth;
    // set ul’s width as the total width of all images in image slider.
    ul.style.width = parseInt(imageWidth * imageNumber) + 'px';
    slider(ul);
}


/**delta function is to set how the image slide—keep still for a while and move to next picture.
*step function will be called many times until clearInterval() been called
* currentImage * imageWidth is the currentImage position of ul
* delta start from 0 to 1, delta * imageWidth is the pixels that changes
**/
function slider(ul){ 
    animate({
        delay:17,
        duration: 3000,
        delta:function(p){return Math.max(0, -1 + 2 * p)},
        step:function(delta){
            ul.style.left = '-' + parseInt(currentImage * imageWidth + delta * imageWidth) + 'px';
        },
        callback:function(){
            currentImage++;
            // if it doesn’t slied to the last image, keep sliding
            if(currentImage < imageNumber-1){
                slider(ul);
            }
                // if current image it’s the last one, it slides back to the first one
            else{
                var leftPosition = (imageNumber - 1) * imageWidth;
                // after 2 seconds, call the goBack function to slide to the first image 
                setTimeout(function(){goBack(leftPosition)},2000); 
                setTimeout(function(){slider(ul)}, 4000);
            }
        }
    });
}

function goBack(leftPosition){
    currentImage = 0; 
    var id = setInterval(function(){
        if(leftPosition >= 0){
            ul.style.left = '-' + parseInt(leftPosition) + 'px';
            leftPosition -= imageWidth / 10;
        }
        else{
            clearInterval(id);
        } 
    }, 17);
}

//generic animate function
function animate(opts) {
    var start = new Date;
    var id = setInterval(function () {
        var timePassed = new Date - start;
        var progress = timePassed / opts.duration
        if (progress > 1) {
            progress = 1;
        }
        var delta = opts.delta(progress);
        opts.step(delta);
        if (progress == 1) {
            clearInterval(id);
            opts.callback();
        }
    }, opts.dalay || 17);
}
window.onload = init;